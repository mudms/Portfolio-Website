{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\GPTProject\\\\Portfolio website\\\\my-portfolio\\\\src\\\\components\\\\Projects\\\\Project.js\";\nimport React from 'react';\nimport './Styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 1,\n  title: 'Project 1',\n  subTitle: 'Description 1',\n  imageUrl: 'path-to-image-1.jpg'\n}, {\n  id: 2,\n  title: 'Project 2',\n  subTitle: 'Description 2',\n  imageUrl: 'path-to-image-2.jpg'\n}\n// Add more projects as needed\n];\n\nconst ProjectSection = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"project-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-image\",\n          style: {\n            backgroundImage: `url(${project.imageUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"project-title\",\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"project-subtitle\",\n            children: project.subTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectSection;\nexport default ProjectSection;\nvar _c;\n$RefreshReg$(_c, \"ProjectSection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","projects","id","title","subTitle","imageUrl","ProjectSection","className","children","map","project","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/GPTProject/Portfolio website/my-portfolio/src/components/Projects/Project.js"],"sourcesContent":["import React from 'react';\r\nimport './Styles.css';\r\n\r\nconst projects = [\r\n  {\r\n    id: 1,\r\n    title: 'Project 1',\r\n    subTitle: 'Description 1',\r\n    imageUrl: 'path-to-image-1.jpg',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Project 2',\r\n    subTitle: 'Description 2',\r\n    imageUrl: 'path-to-image-2.jpg',\r\n  },\r\n  // Add more projects as needed\r\n];\r\n\r\nconst ProjectSection = () => {\r\n  return (\r\n    <section className=\"project-section\">\r\n      <div className=\"project-grid\">\r\n        {projects.map(project => (\r\n          <div className=\"project-card\" key={project.id}>\r\n            <div\r\n              className=\"project-image\"\r\n              style={{ backgroundImage: `url(${project.imageUrl})` }}\r\n            ></div>\r\n            <div className=\"project-details\">\r\n              <h3 className=\"project-title\">{project.title}</h3>\r\n              <p className=\"project-subtitle\">{project.subTitle}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectSection;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAG,CACf;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,WAAW;EAClBC,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE;AACZ;AACA;AAAA,CACD;;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,oBACEN,OAAA;IAASO,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAClCR,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BP,QAAQ,CAACQ,GAAG,CAACC,OAAO,iBACnBV,OAAA;QAAKO,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BR,OAAA;UACEO,SAAS,EAAC,eAAe;UACzBI,KAAK,EAAE;YAAEC,eAAe,EAAG,OAAMF,OAAO,CAACL,QAAS;UAAG;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACPhB,OAAA;UAAKO,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BR,OAAA;YAAIO,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEE,OAAO,CAACP;UAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClDhB,OAAA;YAAGO,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEE,OAAO,CAACN;UAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA,GAR2BN,OAAO,CAACR,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASxC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACC,EAAA,GAnBIX,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}